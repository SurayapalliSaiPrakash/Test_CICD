name: Databricks CI/CD

on:
  push:
    branches: [ main, qa, dev, feature/* ]
  pull_request:
    branches: [ main, qa, develop ]

jobs:
  databricks-deploy:
    runs-on: ubuntu-latest
    env:
      BUNDLE_NAME: deployment

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Databricks CLI and Bundle CLI
        run: |
          python -m pip install --upgrade pip
          pip install databricks-sdk
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | bash

      - name: Set Environment Variables
        run: |
          BRANCH=${GITHUB_REF##*/}
          if [[ "$BRANCH" == "main" ]]; then
            echo "DATABRICKS_HOST=${{ secrets.DATABRICKS_PROD_HOST }}" >> $GITHUB_ENV
            echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_PROD_TOKEN }}" >> $GITHUB_ENV
            echo "ENV=prod" >> $GITHUB_ENV
            echo "NOTEBOOK_PATH=/Workspace/Shared/DCF" >> $GITHUB_ENV
          elif [[ "$BRANCH" == "qa" ]]; then
            echo "DATABRICKS_HOST=${{ secrets.DATABRICKS_QA_HOST }}" >> $GITHUB_ENV
            echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_QA_TOKEN }}" >> $GITHUB_ENV
            echo "ENV=qa" >> $GITHUB_ENV
            echo "NOTEBOOK_PATH=/Workspace/Shared/DCF" >> $GITHUB_ENV
          elif [[ "$BRANCH" =~ ^feature* ]]; then
            echo "DATABRICKS_HOST=${{ secrets.DATABRICKS_DEV_HOST }}" >> $GITHUB_ENV
            echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_DEV_TOKEN }}" >> $GITHUB_ENV
            echo "ENV=dev" >> $GITHUB_ENV
          else
            echo "DATABRICKS_HOST=${{ secrets.DATABRICKS_DEV_HOST }}" >> $GITHUB_ENV
            echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_DEV_TOKEN }}" >> $GITHUB_ENV
            echo "ENV=dev" >> $GITHUB_ENV
            echo "NOTEBOOK_PATH=/Workspace/Shared/DCF" >> $GITHUB_ENV
          fi

      - name: Validate Bundle
        run: databricks bundle validate --target ${{ env.ENV }}

      - name: Build Bundle
        run: databricks bundle build --target ${{ env.ENV }}

      - name: Deploy Bundle
        run: databricks bundle deploy --target ${{ env.ENV }} --auto-approve --force-lock

     
      #- name: Upload Notebooks to /Workspace/Shared/DCF
        #run: |
          #databricks workspace import-dir --profile DEFAULT --overwrite ./resources/Notebooks /Workspace/Shared/Notebooks


      
